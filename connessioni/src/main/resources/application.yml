# application.yml
--- 
spring: 
  application: 
    name: connessioni
  cloud:
    kubernetes: 
      discovery: 
        enabled: true 
        service-name: ${spring.application.name}
    # consul:
    #   host: consul
    #   #host: localhost
    #   port: 8500
    #   discovery: 
    #     instanceId: ${spring.application.name}-${spring.cloud.client.hostname}-${random.value}
    #     healthCheckPath: /actuator/health
    #     healthCheckInterval: 10s
    #     # configurazione per effettuare esprimenti, NON USARE UN PRODUZIONE 
    #     # dopo quanto tempo consul deve smettere di restituire servizi che non rispondono all'health check? 
    #     healthCheckCriticalTimeout: 60s
    #     # consul deve restituire solo servizi che passano l'health check (default=false) 
    #     queryPassing: true 
    loadbalancer: 
      ribbon.enabled: false 

server: 
#  port: ${PORT:${SERVER_PORT:0}}
  port: 8080

# fa il logging dei comandi sql eseguiti 
#spring.jpa.show-sql: true
# disable OSIV
spring.jpa.open-in-view: false

########################################

# DB-related
spring.datasource.url: jdbc:postgresql://connessioni-db:5432/connessioni
spring.datasource.driver-class-name: org.postgresql.Driver
spring.datasource.username: postgres
spring.datasource.password: postgres
spring.jpa.database-platform: org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto: none

# Kafka-related
spring.kafka.bootstrap-servers: kafka:9092
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
