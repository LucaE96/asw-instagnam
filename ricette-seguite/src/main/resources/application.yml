# application.yml 
--- 
spring: 
  application: 
    name: ricette-seguite
  cloud:
    consul:
      host: consul
      #host: localhost
      port: 8500
      discovery: 
        instanceId: ${spring.application.name}-${spring.cloud.client.hostname}-${random.value}
        healthCheckPath: /actuator/health
        healthCheckInterval: 10s
        # configurazione per effettuare esprimenti, NON USARE UN PRODUZIONE 
        # dopo quanto tempo consul deve smettere di restituire servizi che non rispondono all'health check? 
        healthCheckCriticalTimeout: 60s
        # consul deve restituire solo servizi che passano l'health check (default=false) 
        queryPassing: true 
    loadbalancer: 
      ribbon.enabled: false 

server: 
  port: ${PORT:${SERVER_PORT:0}}
#  port: 8080

spring.jpa.open-in-view: false

########################################

# DB-related
spring.datasource.url: jdbc:postgresql://ricetteseguite-db:5432/ricetteseguite
spring.datasource.driver-class-name: org.postgresql.Driver
spring.datasource.username: postgres
spring.datasource.password: postgres
spring.jpa.database-platform: org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto: none

# Kafka-related
spring.kafka.consumer.group-id: asw.instagnam.services.ricetteseguite
spring.kafka.bootstrap-servers: kafka:9092
spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages: asw.instagnam.api.events,asw.instagnam.api.events.connessioni,asw.instagnam.api.events.ricette